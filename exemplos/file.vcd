$date
	Wed Jul 30 14:43:10 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 3 ! s [2:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 3 $ x [2:0] $end
$var reg 3 % y [2:0] $end
$scope module ripple_adder $end
$var wire 1 # cin $end
$var wire 3 & x [2:0] $end
$var wire 3 ' y [2:0] $end
$var wire 3 ( s [2:0] $end
$var wire 1 ) cout2 $end
$var wire 1 * cout1 $end
$var wire 1 " cout $end
$scope module sum1 $end
$var wire 1 # cin $end
$var wire 1 * cout $end
$var wire 1 + s $end
$var wire 1 , x $end
$var wire 1 - y $end
$upscope $end
$scope module sum2 $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 . s $end
$var wire 1 / x $end
$var wire 1 0 y $end
$upscope $end
$scope module sum3 $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 1 s $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
03
02
01
00
1/
1.
1-
0,
1+
0*
0)
b11 (
b1 '
b10 &
b1 %
b10 $
0#
0"
b11 !
$end
#10
